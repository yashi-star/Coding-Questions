//recursive
class Solution {
public:
    vector<int> num;
    vector<int> inorderTraversal(TreeNode* root) {
         if (root==nullptr)
            return num;
        inorderTraversal(root->left);
        num.push_back(root->val);
        inorderTraversal(root->right); 
        return num;      
    }
};

//iterative
class Solution {
public:
vector<int>v;
    vector<int> inorderTraversal(TreeNode* root) {
        stack<TreeNode *>s;
        while(root||!s.empty()){
            if(root!=NULL){
            s.push(root);
            root=root->left;
        }
         else{
          root=s.top();
          s.pop();
          v.push_back(root->val);
          root=root->right;     
    }}
    return v;}
};
